#######################
#######################Seurat
#######################

#######r/3.5.1
#ggplot2_3.3.0   reticulate_1.15 dplyr_0.8.5	Seurat_3.1.5     



############Seurat processing of SoupX-adjusted libraries
############
O_RT.data <- Read10X(data.dir = "~/SoupX/PATH/C57_RT_Rep1_LN_SoupX")
O_RT <- CreateSeuratObject(counts = O_RT.data, min.cells=3, project = "C57_RT_Rep1_LN_SoupX")
O_RT$Replicate <- "Rep1"
O_RT$Treatment <- "CONTROL"
str(O_RT) #5886
############################################################################
O_6C.data <- Read10X(data.dir = "~/SoupX/PATH/C57_COLD_Rep1_LN_SoupX")
O_6C <- CreateSeuratObject(counts = O_6C.data, min.cells=3, project = "C57_COLD_Rep1_LN_SoupX")
O_6C$Replicate <- "Rep1"
O_6C$Treatment <- "COLD"
str(O_6C) #10242
############################################################################
O_CL.data <- Read10X(data.dir = "~/SoupX/PATH/C57_CL_Rep1_LN_SoupX")
O_CL <- CreateSeuratObject(counts = O_CL.data, min.cells=3, project = "C57_CL_Rep1_LN_SoupX")
O_CL$Replicate <- "Rep1"
O_CL$Treatment <- "CL"
str(O_CL) #14792
############################################################################
R_RT.data <- Read10X(data.dir = "~/SoupX/PATH/C57_RT_Rep2_LN_SoupX")
R_RT <- CreateSeuratObject(counts = R_RT.data, min.cells=3, project = "C57_RT_Rep2_LN_SoupX")
R_RT$Replicate <- "Rep2"
R_RT$Treatment <- "CONTROL"
str(R_RT) #22072
############################################################################
R_6C.data <- Read10X(data.dir = "~/SoupX/PATH/C57_COLD_Rep2_LN_SoupX")
R_6C <- CreateSeuratObject(counts = R_6C.data, min.cells=3, project = "C57_COLD_Rep2_LN_SoupX")
R_6C$Replicate <- "Rep2"
R_6C$Treatment <- "COLD"
str(R_6C) #7414
############################################################################
R_CL.data <- Read10X(data.dir = "~/SoupX/PATH/C57_CL_Rep2_LN_SoupX")
R_CL <- CreateSeuratObject(counts = R_CL.data, min.cells=3, project = "C57_CL_Rep2_LN_SoupX")
R_CL$Replicate <- "Rep2"
R_CL$Treatment <- "CL"
str(R_CL) #6792


###################
#Subset
###################
O_RT[["percent.mt"]] <- PercentageFeatureSet(O_RT, pattern = "^mt-")
O_6C[["percent.mt"]] <- PercentageFeatureSet(O_6C, pattern = "^mt-")
O_CL[["percent.mt"]] <- PercentageFeatureSet(O_CL, pattern = "^mt-")
R_RT[["percent.mt"]] <- PercentageFeatureSet(R_RT, pattern = "^mt-")
R_6C[["percent.mt"]] <- PercentageFeatureSet(R_6C, pattern = "^mt-")
R_CL[["percent.mt"]] <- PercentageFeatureSet(R_CL, pattern = "^mt-")
O_RT <- subset(O_RT, subset = percent.mt < 10 & nCount_RNA < 15000 & nFeature_RNA > 100)
O_6C <- subset(O_6C, subset = percent.mt < 10 & nCount_RNA < 15000 & nFeature_RNA > 100)
O_CL <- subset(O_CL, subset = percent.mt < 10 & nCount_RNA < 15000 & nFeature_RNA > 100)
R_RT <- subset(R_RT, subset = percent.mt < 10 & nCount_RNA < 15000 & nFeature_RNA > 100)
R_6C <- subset(R_6C, subset = percent.mt < 10 & nCount_RNA < 15000 & nFeature_RNA > 100)
R_CL <- subset(R_CL, subset = percent.mt < 10 & nCount_RNA < 15000 & nFeature_RNA > 100)
str(O_RT) #5603
str(O_6C) #9855
str(O_CL) #12894
str(R_RT) #6171
str(R_6C) #7062
str(R_CL) #6422


###################
#Normalize
###################
O_RTn <- NormalizeData(O_RT)
O_6Cn <- NormalizeData(O_6C)
O_CLn <- NormalizeData(O_CL)
R_RTn <- NormalizeData(R_RT)
R_6Cn <- NormalizeData(R_6C)
R_CLn <- NormalizeData(R_CL)


###################
#Merge
###################
#https://satijalab.org/seurat/v3.1/merge_vignette.html
OGnorm <- merge(O_RTn, y = c(O_6Cn, O_CLn), project = "iBAT_RT6CCL_SoupX_OG_Linneg_merge", merge.data = TRUE)
RTnorm <- merge(R_RTn, y = c(R_6Cn, R_CLn), project = "iBAT_RT6CCL_SoupX_RE_Linneg_merge", merge.data = TRUE)


###################
#Find Variable Features
###################
OGnorm <- FindVariableFeatures(OGnorm, selection.method = "vst", nfeatures = 2000)
RTnorm <- FindVariableFeatures(RTnorm, selection.method = "vst", nfeatures = 2000)


###################
###################
#Integrate
#######################dim = 15, res 0.1
LNanchors15 <- FindIntegrationAnchors(object.list = list(OGnorm, RTnorm), dims = 1:15) 
Linneg_mi_d15 <- IntegrateData(anchorset = LNanchors15, dims = 1:15)
###################
#Scale
###################
allgenesmi15 <- rownames(Linneg_mi_d15)
Linneg_mi_d15 <- ScaleData(Linneg_mi_d15, features = allgenesmi15)
###################
#PCs
###################
Linneg_mi_d15 <- RunPCA(Linneg_mi_d15, features = VariableFeatures(object = Linneg_mi_d15))
Linneg_mi_d15 <- FindNeighbors(Linneg_mi_d15, dims = 1:15)
###################
#Visualize Data
###################
Linneg_mi_d15_r15 <- FindClusters(Linneg_mi_d15, resolution = 0.15)
#TSNE
Linneg_mi_d15_r15_t <- RunTSNE(Linneg_mi_d15_r15, dims = 1:15)
png("Linneg_mi_d15_r15_tsne_1.png")
DimPlot(Linneg_mi_d15_r15_t, reduction = "tsne", label = TRUE)
dev.off()
png("Linneg_mi_d15_r15_tsne_2.png")
DimPlot(Linneg_mi_d15_r15_t, reduction = "tsne", split.by = "Treatment")
dev.off()
png("Linneg_mi_d15_r15_tsne_3.png")
DimPlot(Linneg_mi_d15_r15_t, reduction = "tsne", split.by = "Replicate")
dev.off()
png("Linneg_mi_d15_r15_tsne_4.png")
DimPlot(Linneg_mi_d15_r15_t, reduction = "tsne", split.by = "orig.ident")
dev.off()


Linneg_mi_d15_r15_t@meta.data$integrated_snn_res.0.15 %>% table()
#    0     1     2     3     4     5     6     7     8     9    10 
#13378 10029  9747  3639  3467  3220  1716  1361   678   662   110




###################
#Set new cluster ids
###################
new.cluster.ids <- c("ASC1", "VEC", "ASC2", "ASC3", "VSMC", "Diff", "Prolif", "Immune", "Schwann", "Immune", "Junk")
names(new.cluster.ids) <- levels(Linneg_mi_d15_r15_t)
Linneg_mi_d15_r15_t <- RenameIdents(Linneg_mi_d15_r15_t, new.cluster.ids)
levels(Linneg_mi_d15_r15_t)
# [1] "ASC1"    "VEC"     "ASC2"    "ASC3"    "VSMC"    "Diff"    "Prolif" 
# [8] "Immune"  "Schwann" "Junk" 
levels(x = Linneg_mi_d15_r15_t) <- c("ASC1", "ASC2", "ASC3", "Prolif", "Diff", "VEC", "VSMC", "Immune", "Schwann", "Junk")
levels(Linneg_mi_d15_r15_t)
# [1] "ASC1"    "ASC2"    "ASC3"    "Prolif"  "Diff"    "VEC"     "VSMC"   
# [8] "Immune"  "Schwann" "Junk"


###################
#change order of treatment for split tsne
###################
Linneg_mi_d15_r15_t$Treatment <- factor(Linneg_mi_d15_r15_t$Treatment, levels = c('CONTROL', 'COLD', 'CL'))





##################remove junk clusters and increase point size

Linneg_mi_d15_r15_t[["seurat_cident"]] <- Idents(object = Linneg_mi_d15_r15_t)
Idents(Linneg_mi_d15_r15_t) %>% table()
#   ASC1    ASC2    ASC3  Prolif    Diff     VEC    VSMC  Immune Schwann    Junk 
#  13378    9747    3639    1716    3220   10029    3467    2023     678     110
Linneg_mi_d15_r15_t_nojunk <- subset(Linneg_mi_d15_r15_t, idents = c("ASC1", "ASC2", "ASC3", "Prolif", "Diff", "VEC", "VSMC", "Immune", "Schwann")) 
Idents(Linneg_mi_d15_r15_t_nojunk) %>% table()
#   ASC1    ASC2    ASC3  Prolif    Diff     VEC    VSMC  Immune Schwann 
#  13378    9747    3639    1716    3220   10029    3467    2023     678



#split labeled tsne Figure 5 - figure supplement 1D
Linneg_mi_d15_r15_t_nojunk$Treatment <- factor(Linneg_mi_d15_r15_t_nojunk$Treatment, levels = c('CONTROL', 'COLD', 'CL'))
png("Linneg_mi_d15_r15_t_nojunk_labels_split_1.png", height = 480, width = 1250)
DimPlot(Linneg_mi_d15_r15_t_nojunk, reduction = "tsne", pt.size = 0.5, split.by = "Treatment", cols = c("#F8766D", "#64B200", "#AEA200", "#00BADE", "#00C1A7", "#DB8E00", "#00BD5C", "#00A6FF", "#B385FF")) + theme(text = element_text(size = 25, face = "bold")) + labs(title = "Lin- Cells")
dev.off()


#####################cluster markers
Linneg_mi_d15_r15_t_nojunk_ASC1markers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "ASC1", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
Linneg_mi_d15_r15_t_nojunk_ASC2markers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "ASC2", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
Linneg_mi_d15_r15_t_nojunk_ASC3markers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "ASC3", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
Linneg_mi_d15_r15_t_nojunk_Prolifmarkers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "Prolif", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
Linneg_mi_d15_r15_t_nojunk_Diffmarkers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "Diff", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
Linneg_mi_d15_r15_t_nojunk_VECmarkers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "VEC", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE
Linneg_mi_d15_r15_t_nojunk_VSMCmarkers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "VSMC", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
Linneg_mi_d15_r15_t_nojunk_Immunemarkers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "Immune", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
Linneg_mi_d15_r15_t_nojunk_Schwannmarkers <- FindMarkers(Linneg_mi_d15_r15_t_nojunk, ident.1 = "Schwann", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
write.csv(Linneg_mi_d15_r15_t_nojunk_ASC1markers, "Linneg_mi_d15_r15_t_nojunk_ASC1markers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_ASC2markers, "Linneg_mi_d15_r15_t_nojunk_ASC2markers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_ASC3markers, "Linneg_mi_d15_r15_t_nojunk_ASC3markers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_Prolifmarkers, "Linneg_mi_d15_r15_t_nojunk_Prolifmarkers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_Diffmarkers, "Linneg_mi_d15_r15_t_nojunk_Diffmarkers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_VECmarkers, "Linneg_mi_d15_r15_t_nojunk_VECmarkers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_VSMCmarkers, "Linneg_mi_d15_r15_t_nojunk_VSMCmarkers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_Immunemarkers, "Linneg_mi_d15_r15_t_nojunk_Immunemarkers.csv")
write.csv(Linneg_mi_d15_r15_t_nojunk_Schwannmarkers, "Linneg_mi_d15_r15_t_nojunk_Schwannmarkers.csv")




Linneg_mi_d15_r15_t_ASCs <- subset(Linneg_mi_d15_r15_t, idents = c("ASC1", "ASC2", "ASC3", "Prolif", "Diff")) 
Linneg_mi_d15_r15_t_ASCs@meta.data$seurat_cident %>% table()
#   ASC1    ASC2    ASC3  Prolif    Diff     VEC    VSMC  Immune Schwann    Junk 
#  13378    9747    3639    1716    3220       0       0       0       0       0 
write.csv(Linneg_mi_d15_r15_t_ASCs@meta.data, "Linneg_mi_d15_r15_t_ASCs_md.csv")









#################
#################Subset raw data to just ASCs
#################
sub_md_15 <- read.csv("Linneg_mi_d15_r15_t_ASCs_md.csv", header = TRUE)
str(sub_md_15) #31700
sub_md_15_con <- sub_md_15[sub_md_15$Treatment == 'CONTROL',]
sub_md_15_cold <- sub_md_15[sub_md_15$Treatment == 'COLD',]
sub_md_15_cl <- sub_md_15[sub_md_15$Treatment == 'CL',]
str(sub_md_15_con) #7377
str(sub_md_15_cold) #12408
str(sub_md_15_cl) #11915

sub_md_15_con_r1 <- sub_md_15_con[sub_md_15_con$Replicate == 'Rep1',]
str(sub_md_15_con_r1) #3621
head(sub_md_15_con_r1) #_1_1
sub_md_15_con_r2 <- sub_md_15_con[sub_md_15_con$Replicate == 'Rep2',]
str(sub_md_15_con_r2) #3756
head(sub_md_15_con_r2) #_1_2

sub_md_15_cold_r1 <- sub_md_15_cold[sub_md_15_cold$Replicate == 'Rep1',]
str(sub_md_15_cold_r1) #7245
head(sub_md_15_cold_r1) #_2_1
sub_md_15_cold_r2 <- sub_md_15_cold[sub_md_15_cold$Replicate == 'Rep2',]
str(sub_md_15_cold_r2) #5163
head(sub_md_15_cold_r2) #_2_2

sub_md_15_cl_r1 <- sub_md_15_cl[sub_md_15_cl$Replicate == 'Rep1',]
str(sub_md_15_cl_r1) #6507
head(sub_md_15_cl_r1) #-1_3_1
sub_md_15_cl_r2 <- sub_md_15_cl[sub_md_15_cl$Replicate == 'Rep2',]
str(sub_md_15_cl_r2) #5408
head(sub_md_15_cl_r2) #-1_3_2


sub_md_15_con_r1$X <- gsub('_1_1', '', sub_md_15_con_r1$X)
sub_md_15_con_r2$X <- gsub('_1_2', '', sub_md_15_con_r2$X)
sub_md_15_cold_r1$X <- gsub('_2_1', '', sub_md_15_cold_r1$X)
sub_md_15_cold_r2$X <- gsub('_2_2', '', sub_md_15_cold_r2$X)
sub_md_15_cl_r1$X <- gsub('-1_3_1', '-1', sub_md_15_cl_r1$X)
sub_md_15_cl_r2$X <- gsub('-1_3_2', '-1', sub_md_15_cl_r2$X)
head(sub_md_15_con_r1)
head(sub_md_15_con_r2)
head(sub_md_15_cold_r1)
head(sub_md_15_cold_r2)
head(sub_md_15_cl_r1)
head(sub_md_15_cl_r2)


######################
#subset to just ASCs
######################

O_RT_sub15 <- subset(O_RT, cells = sub_md_15_con_r1$X)
O_6C_sub15 <- subset(O_6C, cells = sub_md_15_cold_r1$X)
O_CL_sub15 <- subset(O_CL, cells = sub_md_15_cl_r1$X)
R_RT_sub15 <- subset(R_RT, cells = sub_md_15_con_r2$X)
R_6C_sub15 <- subset(R_6C, cells = sub_md_15_cold_r2$X)
R_CL_sub15 <- subset(R_CL, cells = sub_md_15_cl_r2$X)
str(O_RT_sub15) #3621
str(O_6C_sub15) #7245
str(O_CL_sub15) #6507
str(R_RT_sub15) #3756
str(R_6C_sub15) #5163
str(R_CL_sub15) #5408


###################
#Normalize
###################
O_RT_sub15n <- NormalizeData(O_RT_sub15)
O_6C_sub15n <- NormalizeData(O_6C_sub15)
O_CL_sub15n <- NormalizeData(O_CL_sub15)
R_RT_sub15n <- NormalizeData(R_RT_sub15)
R_6C_sub15n <- NormalizeData(R_6C_sub15)
R_CL_sub15n <- NormalizeData(R_CL_sub15)


###################
#Merge
###################
#https://satijalab.org/seurat/v3.1/merge_vignette.html
OG_ASC15_norm <- merge(O_RT_sub15n, y = c(O_6C_sub15n, O_CL_sub15n), project = "iBAT_RT6CCL_SoupX_OG_ASC15_merge", merge.data = TRUE)
RT_ASC15_norm <- merge(R_RT_sub15n, y = c(R_6C_sub15n, R_CL_sub15n), project = "iBAT_RT6CCL_SoupX_RE_ASC15_merge", merge.data = TRUE)


###################
#Find Variable Features
###################
OG_ASC15_norm <- FindVariableFeatures(OG_ASC15_norm, selection.method = "vst", nfeatures = 2000)
RT_ASC15_norm <- FindVariableFeatures(RT_ASC15_norm, selection.method = "vst", nfeatures = 2000)


###################
###################
#Integrate
#######################dim = 12, res 0.1
ASC15anchors12 <- FindIntegrationAnchors(object.list = list(OG_ASC15_norm, RT_ASC15_norm), dims = 1:12) 
ASC15_mi_d12 <- IntegrateData(anchorset = ASC15anchors12, dims = 1:12)
###################
#Scale
###################
allgenesmiASC1512 <- rownames(ASC15_mi_d12)
ASC15_mi_d12 <- ScaleData(ASC15_mi_d12, features = allgenesmiASC1512)
###################
#PCs
###################
ASC15_mi_d12 <- RunPCA(ASC15_mi_d12, features = VariableFeatures(object = ASC15_mi_d12))
ASC15_mi_d12 <- FindNeighbors(ASC15_mi_d12, dims = 1:12)
###################
#Visualize Data
###################
ASC15_mi_d12_r1 <- FindClusters(ASC15_mi_d12, resolution = 0.1)
#TSNE
ASC15_mi_d12_r1_t <- RunTSNE(ASC15_mi_d12_r1, dims = 1:12)
png("ASC15_mi_d12_r1_tsne_1.png")
DimPlot(ASC15_mi_d12_r1_t, reduction = "tsne")
dev.off()
png("ASC15_mi_d12_r1_tsne_2.png")
DimPlot(ASC15_mi_d12_r1_t, reduction = "tsne", split.by = "Treatment")
dev.off()
png("ASC15_mi_d12_r1_tsne_3.png")
DimPlot(ASC15_mi_d12_r1_t, reduction = "tsne", split.by = "Replicate")
dev.off()
png("ASC15_mi_d12_r1_tsne_4.png")
DimPlot(ASC15_mi_d12_r1_t, reduction = "tsne", split.by = "orig.ident")
dev.off()
DefaultAssay(ASC15_mi_d12_r1_t) <- "RNA"
ASC15_mi_d12_r1_t <- ScaleData(ASC15_mi_d12_r1_t, verbose = FALSE)
png("ASC15_mi_d12_r1_tsne_features_1.png")
FeaturePlot(ASC15_mi_d12_r1_t, features = c("Pi16", "Clec11a", "Cdh5", "Myh11", "Cd52", "Mpz"), reduction = "tsne") 
dev.off()
png("ASC15_mi_d12_r1_tsne_features_2.png")
FeaturePlot(ASC15_mi_d12_r1_t, features = c("Timp1", "Birc5", "Car3", "Ucp1"), reduction = "tsne") 
dev.off()


ASC15_mi_d12_r1_t_ASCs2 <- subset(ASC15_mi_d12_r1_t, idents = c(0, 1, 2, 3, 5)) 
ASC15_mi_d12_r1_t@meta.data$seurat_clusters %>% table()
#   0    1    2    3    4    5 
#9314 9206 8138 3689  930  423
ASC15_mi_d12_r1_t_ASCs2@meta.data$seurat_clusters %>% table()
#   0    1    2    3    4    5 
#9314 9206 8138 3689    0  423 
write.csv(ASC15_mi_d12_r1_t_ASCs2@meta.data, "ASC15_mi_d12_r1_t_ASCs2_md.csv")








#################
#################Subset again to remove debris
#################
sub_md2 <- read.csv("ASC15_mi_d12_r1_t_ASCs2_md.csv", header = TRUE)
str(sub_md2) #30770
sub_md2_con <- sub_md2[sub_md2$Treatment == 'CONTROL',]
sub_md2_cold <- sub_md2[sub_md2$Treatment == 'COLD',]
sub_md2_cl <- sub_md2[sub_md2$Treatment == 'CL',]
str(sub_md2_con) #7234
str(sub_md2_cold) #12261
str(sub_md2_cl) #11275

sub_md2_con_r1 <- sub_md2_con[sub_md2_con$Replicate == 'Rep1',]
str(sub_md2_con_r1) #3544
head(sub_md2_con_r1) #_1_1
sub_md2_con_r2 <- sub_md2_con[sub_md2_con$Replicate == 'Rep2',]
str(sub_md2_con_r2) #3690
head(sub_md2_con_r2) #_1_2

sub_md2_cold_r1 <- sub_md2_cold[sub_md2_cold$Replicate == 'Rep1',]
str(sub_md2_cold_r1) #7139
head(sub_md2_cold_r1) #_2_1
sub_md2_cold_r2 <- sub_md2_cold[sub_md2_cold$Replicate == 'Rep2',]
str(sub_md2_cold_r2) #5122
head(sub_md2_cold_r2) #_2_2

sub_md2_cl_r1 <- sub_md2_cl[sub_md2_cl$Replicate == 'Rep1',]
str(sub_md2_cl_r1) #5898
head(sub_md2_cl_r1) #-1_3_1
sub_md2_cl_r2 <- sub_md2_cl[sub_md2_cl$Replicate == 'Rep2',]
str(sub_md2_cl_r2) #5377
head(sub_md2_cl_r2) #-1_3_2


sub_md2_con_r1$X <- gsub('_1_1', '', sub_md2_con_r1$X)
sub_md2_con_r2$X <- gsub('_1_2', '', sub_md2_con_r2$X)
sub_md2_cold_r1$X <- gsub('_2_1', '', sub_md2_cold_r1$X)
sub_md2_cold_r2$X <- gsub('_2_2', '', sub_md2_cold_r2$X)
sub_md2_cl_r1$X <- gsub('-1_3_1', '-1', sub_md2_cl_r1$X)
sub_md2_cl_r2$X <- gsub('-1_3_2', '-1', sub_md2_cl_r2$X)
head(sub_md2_con_r1)
head(sub_md2_con_r2)
head(sub_md2_cold_r1)
head(sub_md2_cold_r2)
head(sub_md2_cl_r1)
head(sub_md2_cl_r2)


######################
#subset to just ASCs
######################

O_RT_sub2 <- subset(O_RT, cells = sub_md2_con_r1$X)
O_6C_sub2 <- subset(O_6C, cells = sub_md2_cold_r1$X)
O_CL_sub2 <- subset(O_CL, cells = sub_md2_cl_r1$X)
R_RT_sub2 <- subset(R_RT, cells = sub_md2_con_r2$X)
R_6C_sub2 <- subset(R_6C, cells = sub_md2_cold_r2$X)
R_CL_sub2 <- subset(R_CL, cells = sub_md2_cl_r2$X)
str(O_RT_sub2) #3544
str(O_6C_sub2) #3690
str(O_CL_sub2) #7139
str(R_RT_sub2) #5122
str(R_6C_sub2) #5898
str(R_CL_sub2) #5377


###################
#Normalize
###################
O_RT_sub2n <- NormalizeData(O_RT_sub2)
O_6C_sub2n <- NormalizeData(O_6C_sub2)
O_CL_sub2n <- NormalizeData(O_CL_sub2)
R_RT_sub2n <- NormalizeData(R_RT_sub2)
R_6C_sub2n <- NormalizeData(R_6C_sub2)
R_CL_sub2n <- NormalizeData(R_CL_sub2)


###################
#Merge
###################
#https://satijalab.org/seurat/v3.1/merge_vignette.html
OG_ASC2_norm <- merge(O_RT_sub2n, y = c(O_6C_sub2n, O_CL_sub2n), project = "iBAT_RT6CCL_SoupX_OG_ASC2_merge", merge.data = TRUE)
RT_ASC2_norm <- merge(R_RT_sub2n, y = c(R_6C_sub2n, R_CL_sub2n), project = "iBAT_RT6CCL_SoupX_RE_ASC2_merge", merge.data = TRUE)


###################
#Find Variable Features
###################
OG_ASC2_norm <- FindVariableFeatures(OG_ASC2_norm, selection.method = "vst", nfeatures = 2000)
RT_ASC2_norm <- FindVariableFeatures(RT_ASC2_norm, selection.method = "vst", nfeatures = 2000)




###################
###################
#Integrate
#######################dim = 13, res 0.1
ASC2anchors13 <- FindIntegrationAnchors(object.list = list(OG_ASC2_norm, RT_ASC2_norm), dims = 1:13) 
ASC2_mi_d13 <- IntegrateData(anchorset = ASC2anchors13, dims = 1:13)
###################
#Scale
###################
allgenesmiASC213 <- rownames(ASC2_mi_d13)
ASC2_mi_d13 <- ScaleData(ASC2_mi_d13, features = allgenesmiASC213)
###################
#PCs
###################
ASC2_mi_d13 <- RunPCA(ASC2_mi_d13, features = VariableFeatures(object = ASC2_mi_d13))
ASC2_mi_d13 <- FindNeighbors(ASC2_mi_d13, dims = 1:13)
###################
#Visualize Data
###################
ASC2_mi_d13_r15 <- FindClusters(ASC2_mi_d13, resolution = 0.15)
#TSNE
ASC2_mi_d13_r15_t <- RunTSNE(ASC2_mi_d13_r15, dims = 1:13)
png("ASC152_mi_d13_r15_tsne_1.png")
DimPlot(ASC2_mi_d13_r15_t, reduction = "tsne")
dev.off()





###################
#Set new cluster ids
###################
new.cluster.ids <- c("ASC1_cold-activated", "ASC2", "ASC1_quiescent", "ASC3", "Proliferating/Differentiating", "Proliferating/Non-differentiating", "Late Differentiation")
names(new.cluster.ids) <- levels(ASC2_mi_d13_r15_t)
ASC2_mi_d13_r15_t <- RenameIdents(ASC2_mi_d13_r15_t, new.cluster.ids)
levels(ASC2_mi_d13_r15_t)
#[1] "ASC1_cold-activated"               "ASC2"                             
#[3] "ASC1_quiescent"                    "ASC3"                             
#[5] "Proliferating/Differentiating"     "Proliferating/Non-differentiating"
#[7] "Late Differentiation"
levels(x = ASC2_mi_d13_r15_t) <- c("ASC1_quiescent", "ASC1_cold-activated", "ASC2", "ASC3", "Proliferating/Non-differentiating", "Proliferating/Differentiating", "Late Differentiation")
levels(ASC2_mi_d13_r15_t)
#[1] "ASC1_quiescent"                    "ASC1_cold-activated"              
#[3] "ASC2"                              "ASC3"                             
#[5] "Proliferating/Non-differentiating" "Proliferating/Differentiating"    
#[7] "Late Differentiation"  



#change order of treatment for split tsne
ASC2_mi_d13_r15_t$Treatment <- factor(ASC2_mi_d13_r15_t$Treatment, levels = c('CONTROL', 'COLD', 'CL'))



#labeled tsne Figure 5 - figure supplement 1E
png("ASC152_mi_d13_r15_tsne_labels_1.png", height = 480, width = 800)
DimPlot(ASC2_mi_d13_r15_t, reduction = "tsne", pt.size = 0.25, cols = c("#00BFC4", "#F8766D", "#00BA38", "#B79F00", "#619CFF", "#F564E3", "#DB8E00")) + theme(text = element_text(size = 25, face = "bold")) + labs(title = "ASCs")
dev.off()





#labeled tsne Figure 5 - figure supplement 1F
DefaultAssay(ASC2_mi_d13_r15_t) <- "RNA"
ASC2_mi_d13_r15_t <- ScaleData(ASC2_mi_d13_r15_t, verbose = FALSE)
png("ASC152_mi_d13_r15_tsne_features_Nnat_2.png", height = 480, width = 1440)
FeaturePlot(ASC2_mi_d13_r15_t, features = "Nnat", pt.size = 1, reduction = "tsne", split.by = "Treatment") + theme(text = element_text(size = 25, face = "bold"))
dev.off()
png("ASC152_mi_d13_r15_tsne_features_Birc5_2.png", height = 480, width = 1440)
FeaturePlot(ASC2_mi_d13_r15_t, features = "Birc5", pt.size = 1, reduction = "tsne", split.by = "Treatment") + theme(text = element_text(size = 25, face = "bold"))
dev.off()




##########################Table 1B 
ASC2_mi_d13_r15_t[["seurat_cident"]] <- Idents(object = ASC2_mi_d13_r15_t)

ASC2_mi_d13_r15_t$cluster.treatment <- paste(Idents(ASC2_mi_d13_r15_t), ASC2_mi_d13_r15_t$Treatment, sep = "_")
ASC2_mi_d13_r15_t@meta.data$cluster.treatment %>% table()
#                   ASC1_cold-activated_CL 
#                                     2592 
#                 ASC1_cold-activated_COLD 
#                                     6183 
#              ASC1_cold-activated_CONTROL 
#                                      608 
#                        ASC1_quiescent_CL 
#                                     1418 
#                      ASC1_quiescent_COLD 
#                                      250 
#                   ASC1_quiescent_CONTROL 
#                                     2809 
#                                  ASC2_CL 
#                                     4398 
#                                ASC2_COLD 
#                                     2086 
#                             ASC2_CONTROL 
#                                     2556 
#                                  ASC3_CL 
#                                     1341 
#                                ASC3_COLD 
#                                     1110 
#                             ASC3_CONTROL 
#                                     1223 
#                  Late Differentiation_CL 
#                                      371 
#                Late Differentiation_COLD 
#                                       43 
#             Late Differentiation_CONTROL 
#                                       10 
#         Proliferating/Differentiating_CL 
#                                      578 
#       Proliferating/Differentiating_COLD 
#                                     1677 
#    Proliferating/Differentiating_CONTROL 
#                                        3 
#     Proliferating/Non-differentiating_CL 
#                                      577 
#   Proliferating/Non-differentiating_COLD 
#                                      912 
#Proliferating/Non-differentiating_CONTROL 
#                                       25





#cluster markers
ASC2_mi_d13_r15_t_ASC1qmarkers <- FindMarkers(ASC2_mi_d13_r15_t, ident.1 = "ASC1_quiescent", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
ASC2_mi_d13_r15_t_ASC1camarkers <- FindMarkers(ASC2_mi_d13_r15_t, ident.1 = "ASC1_cold-activated", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
ASC2_mi_d13_r15_t_ASC2qmarkers <- FindMarkers(ASC2_mi_d13_r15_t, ident.1 = "ASC2", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
ASC2_mi_d13_r15_t_ASC3qmarkers <- FindMarkers(ASC2_mi_d13_r15_t, ident.1 = "ASC3", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
ASC2_mi_d13_r15_t_PNDqmarkers <- FindMarkers(ASC2_mi_d13_r15_t, ident.1 = "Proliferating/Non-differentiating", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
ASC2_mi_d13_r15_t_PDqmarkers <- FindMarkers(ASC2_mi_d13_r15_t, ident.1 = "Proliferating/Differentiating", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
ASC2_mi_d13_r15_t_LDqmarkers <- FindMarkers(ASC2_mi_d13_r15_t, ident.1 = "Late Differentiation", min.pct = 0.20, logfc.threshold = 0.2, only.pos = TRUE)
write.csv(ASC2_mi_d13_r15_t_ASC1qmarkers, "ASC2_mi_d13_r15_t_ASC1qmarkers.csv")
write.csv(ASC2_mi_d13_r15_t_ASC1camarkers, "ASC2_mi_d13_r15_t_ASC1camarkers.csv")
write.csv(ASC2_mi_d13_r15_t_ASC2qmarkers, "ASC2_mi_d13_r15_t_ASC2qmarkers.csv")
write.csv(ASC2_mi_d13_r15_t_ASC3qmarkers, "ASC2_mi_d13_r15_t_ASC3qmarkers.csv")
write.csv(ASC2_mi_d13_r15_t_PNDqmarkers, "ASC2_mi_d13_r15_t_PNDqmarkers.csv")
write.csv(ASC2_mi_d13_r15_t_PDqmarkers, "ASC2_mi_d13_r15_t_PDqmarkers.csv")
write.csv(ASC2_mi_d13_r15_t_LDqmarkers, "ASC2_mi_d13_r15_t_LDqmarkers.csv")
